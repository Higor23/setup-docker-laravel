version: "3.7"
services:
    # image project
    app:
        container_name: project_name
        build: 
            args: 
                user: username
                uid: 1000
            context: .
            dockerfile: Dockerfile
        image: project_name/laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on: 
            - redis
            - queue
        networks: 
            - project
    
    # nginx
    nginx:
        container_name: project_name-nginx
        image: nginx:alpine
        restart: unless-stopped
        ports: 
            - 8180:80
        volumes: 
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks: 
            - project

    # db mysql
    mysql:
        container_name: project_name-mysql
        image: mysql:5.7.22
        restart: unless-stopped
        environment: 
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes: 
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports: 
            - 3388:3306
        networks: 
            - project

     #phpmyadmin
    phpmyadmin:
        container_name: project_name-phpmyadmin
        image: phpmyadmin/phpmyadmin
        restart: always
        ports:
            - '8084:80'
        environment:
            PMA_HOST: mysql
        networks: 
            - project
        
    # queue
    queue:
        container_name: project_name-queue
        build: 
            args: 
                user: username
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes: 
            - ./:/var/www
        depends_on: 
            - redis
        networks: 
            - project

    # redis
    redis:
        container_name: project_name-redis
        image: redis:latest
        networks: 
            - project

networks: 
    project:
        driver: bridge